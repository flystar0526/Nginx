# 在 Nginx 中，worker 是執行單元，負責處理網路請求和執行任務，Nginx 採用 multiprocess 架構
# 包括一個主進程（master process）和多個工作進程（worker processes）：
worker_processes  auto;
sendfile on;

# 設置客戶端與伺服器之間的 HTTP Keep-Alive 連接的超時時間。
keepalive_timeout 60;

# events 控制 Nginx 處理網路事件的方式，影響伺服器的性能和連線管理
events {
  worker_connections 1024;
}

# 管理與 HTTP 協議相關的所有配置，適用於 HTTP 和 HTTPS 請求
# 如果想架 mail server 則可以使用 mail {...}
http {
  upstream flask_servers { # 輪詢負載均衡
      server app1:5001;
      server app2:5002;
      server app3:5003;
  }
  include mime.types;  # 載入其他的配置檔案，用於 MIME 類型設定
  default_type application/octet-stream;  # 默認 MIME 類型
  
  # 定義虛擬主機，針對特定域名或 IP 的請求進行處理
  server {
    listen 80;
    # 處理特定 URI 路徑的請求，設定回應方式或代理至其他服務
    location / {
      proxy_pass http://flask_servers;  # 使用上面定義的 upstream
      # 設定傳給 proxy 的 request header，增加以下內容
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
